RawLayerBucket:
  Type: 'AWS::S3::Bucket'
  Properties:
    AccessControl: Private
    BucketName: !Sub ${Environment}-dap-raw-layer
    LoggingConfiguration:
      DestinationBucketName: !Ref GlobalLogBucket
      LogFilePrefix: dap-raw-layer/log
    PublicAccessBlockConfiguration:
      BlockPublicAcls: true
      BlockPublicPolicy: true
      IgnorePublicAcls: true
      RestrictPublicBuckets: true
    VersioningConfiguration:
      Status: Enabled
    NotificationConfiguration:
      EventBridgeConfiguration:
        EventBridgeEnabled: true
      LambdaConfigurations:
        - Event: s3:ObjectCreated:*
          Function: !GetAtt S3RawToStagingLambda.Arn
          Filter:
            S3Key:
              Rules:
                - Name: prefix
                  Value: reference-data/
                - Name: suffix
                  Value: .csv

RawLayerBucketPolicy:
  Type: AWS::S3::BucketPolicy
  Properties:
    Bucket: !Ref RawLayerBucket
    PolicyDocument:
      Version: 2012-10-17
      Statement:
        - Effect: Deny
          Action: 's3:*'
          Resource: !Sub ${RawLayerBucket.Arn}/*
          Principal: '*'
          Condition:
            Bool:
              aws:SecureTransport: false
        - Effect: Allow
          Action:
            - 's3:GetObject'
            - 's3:PutObject'
            - 's3:ListBucket'
          Resource:
            - !Sub ${RawLayerBucket.Arn}
            - !Sub ${RawLayerBucket.Arn}/*
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root

RawGlueCrawlerRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: !Sub ${Environment}-raw-glue-crawler-role
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: [glue.amazonaws.com]
          Action: ['sts:AssumeRole']
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
    Path: /
    Policies:
      - PolicyName: !Sub ${Environment}-raw-glue-crawler-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'glue:GetConnection'
                - 'glue:GetCrawler'
                - 'glue:CreateTable'
                - 'glue:UpdateCrawler'
                - 'glue:CreatePartition'
                - 'glue:BatchCreatePartition'
              Resource: '*'
            - Effect: Allow
              Action:
                - 's3:GetObject'
                - 's3:PutObject'
                - 's3:ListObject'
              Resource:
                - !Sub 'arn:aws:s3:::${Environment}-dap-raw-layer'
                - !Sub 'arn:aws:s3:::${Environment}-dap-raw-layer/*'
            - Effect: Allow
              Action: 'logs:AssociateKmsKey'
              Resource: 'arn:aws:logs:*:*:/aws-glue/*'

RawGlueDatabase:
  Type: AWS::Glue::Database
  Properties:
    CatalogId: !Sub ${AWS::AccountId}
    DatabaseInput:
      Name: !Sub ${Environment}-${RawGlueDatabaseName}

SplunkRawLayerSingleTableCrawler:
  Type: AWS::Glue::Crawler
  Properties:
    Name: splunk_migrated_data_fixed_schema
    Role: !GetAtt RawGlueCrawlerRole.Arn
    Targets:
      CatalogTargets:
        - DatabaseName: !Ref RawGlueDatabase
          Tables:
            - !Ref SplunkMigrationGlueTable
    DatabaseName: !Ref RawGlueDatabase
    CrawlerSecurityConfiguration: !Ref GlueSecurityConfig
    RecrawlPolicy:
      RecrawlBehavior: CRAWL_EVERYTHING
    SchemaChangePolicy:
      UpdateBehavior: LOG
      DeleteBehavior: LOG
    Configuration: '{"Version":1,"CrawlerOutput":{"Partitions":{"AddOrUpdateBehavior":"InheritFromTable"}}, "Grouping": {"TableGroupingPolicy": "CombineCompatibleSchemas"}}'

SplunkMigrationGlueTable:
  Type: AWS::Glue::Table
  Properties:
    CatalogId: !Sub ${AWS::AccountId}
    DatabaseName: !Ref RawGlueDatabase
    TableInput:
      Name: splunk_migration
      TableType: EXTERNAL_TABLE
      PartitionKeys:
        - { Name: year, Type: string }
        - { Name: month, Type: string }
        - { Name: day, Type: string }
      StorageDescriptor:
        Columns:
          - { Name: event_id, Type: string }
        InputFormat: org.apache.hadoop.mapred.TextInputFormat
        Location: !Sub s3://${RawLayerBucket}/splunk/
        OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
        SerdeInfo:
          Parameters:
            serialiazation.format: 1
          SerializationLibrary: org.openx.data.jsonserde.JsonSerDe

SplunkPerformanceIndexSecret:
  #checkov:skip=CKV_AWS_149:We will use aws managed kms key
  Type: AWS::SecretsManager::Secret
  DeletionPolicy: Retain
  UpdateReplacePolicy: Retain
  Condition: IsProduction
  Properties:
    Description: 'a secret to store username and password for access the performance index'
    Name: !Sub ${Environment}-SplunkPerformanceIndexSecret
    SecretString: '{"username":"xxx","password":"xxx"}'

TxmaRefactoredTable:
  Type: AWS::Glue::Table
  Properties:
    CatalogId: !Ref AWS::AccountId
    DatabaseName: !Ref RawGlueDatabase
    TableInput:
      Name: txma-refactored
      Description: TxMA Raw Layer events as json
      StorageDescriptor:
        Columns:
          - Name: event_id
            Type: string
          - Name: event_name
            Type: string
          - Name: component_id
            Type: string
          - Name: client_id
            Type: string
          - Name: timestamp
            Type: int
          - Name: timestamp_formatted
            Type: string
          - Name: user
            Type: string
          - Name: event_timestamp_ms
            Type: bigint
          - Name: event_timestamp_ms_formatted
            Type: string
          - Name: extensions
            Type: string
          - Name: restricted
            Type: string
          - Name: txma
            Type: string
        Compressed: true
        StoredAsSubDirectories: false
        Location: !Sub s3://${RawLayerBucket}/txma-refactored/
        InputFormat: org.apache.hadoop.mapred.TextInputFormat
        OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
        SerdeInfo:
          SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
      PartitionKeys:
        - Name: datecreated
          Type: string
      TableType: EXTERNAL_TABLE
      Parameters:
        EXTERNAL: 'TRUE'
        'projection.enabled': 'true'
        'projection.datecreated.type': 'date'
        'projection.datecreated.format': "'year='yyyy/'month='MM/'day='dd"
        'projection.datecreated.range': 'year=2025/month=01/day=01,NOW'
        'projection.datecreated.interval': 1
        'projection.datecreated.interval.unit': 'DAYS'
        'storage.location.template': !Join ['', ['s3://', !Ref RawLayerBucket, '/txma-refactored/${datecreated}/']]
